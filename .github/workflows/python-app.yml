name: Janissary Build & Deploy

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: write

jobs:
  backend-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -e .[dev]

      - name: Lint Python code
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: pytest

      - name: Generate Janissary backend reports with latest record file
        run: |
          #latest_record=$(ls -1t test/data/* | head -n 1)
          latest_record="test/data/20250531-211339 - recorded game.mgz"
          echo "Using latest record file: $latest_record"
          mkdir -p output/reports/js/public
          janissary report "$latest_record" output/report.html
          janissary command-yaml "$latest_record" output/commands.yaml
          janissary header-yaml "$latest_record" output/header.haml
          janissary report --json "$latest_record" output/reports/js/public/devdata.json

      - name: Upload backend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifacts
          path: output/

  frontend-build:
    needs: backend-build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: janissary/reports/js
        run: yarn install

      - name: Build frontend with webpack
        working-directory: janissary/reports/js
        run: yarn build
        env:
          NODE_OPTIONS: --openssl-legacy-provider

      - name: Download backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-artifacts
          path: backend_output

      - name: Copy backend artifacts into frontend build output
        run: |
          mkdir -p janissary/reports/js/dist/reports/js/public
          cp -r backend_output/* janissary/reports/js/dist/
          cp backend_output/reports/js/public/devdata.json janissary/reports/js/dist/reports/js/public/

      - name: Prepare /docs directory for GitHub Pages
        run: |
          rm -rf docs  # Clean existing docs
          mkdir -p docs
          cp -r janissary/reports/js/dist/* docs/
          cp janissary/reports/js/public/index.html docs/index.html
          cp backend_output/reports/js/public/devdata.json docs/devdata.json

      - name: Commit and push /docs folder
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add docs
          git commit -m "Update GitHub Pages content in /docs" || echo "No changes  to commit"
          git push origin master
